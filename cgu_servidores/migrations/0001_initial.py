# Generated by Django 3.2.5 on 2021-07-18 00:57

from django.db import migrations, models
import django.db.models.deletion
import psqlextra.manager.manager
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.TextField(help_text='Nome do servidor')),
                ('register', models.TextField(help_text='Matrícula do servidor')),
                ('uf', models.CharField(help_text='UF de exercício do servidor', max_length=2)),
                ('relationship_code', models.IntegerField(help_text='Código do tipo de vínculo')),
                ('relationship', models.TextField(help_text='Tipo de vínculo')),
                ('relationship_status', models.TextField(help_text='Situação do vínculo do servidor com o órgão de lotação e/ou de exercício')),
                ('position_description', models.TextField(help_text='Descrição do cargo ocupado pelo servidor')),
                ('position_tier', models.TextField(help_text='Classe do cargo ocupado pelo servidor')),
                ('position_reference', models.TextField(help_text='Referência do cargo ocupado pelo servidor')),
                ('position_default', models.TextField(help_text='Padrão do cargo ocupado pelo servidor')),
                ('position_level', models.TextField(help_text='Nível do cargo ocupado pelo servidor')),
                ('occupation_initials', models.TextField(help_text='Sigla do cargo/função comissionada ocupada pelo servidor')),
                ('occupation_level', models.TextField(help_text='Nível do cargo/função comissionada ocupada pelo servidor')),
                ('occupation', models.TextField(help_text='Descrição do cargo/função comissionada ocupada pelo servidor')),
                ('activity_code', models.TextField(help_text='Código da atividade do cargo/função comissionada exercida pelo servidor.')),
                ('activity', models.TextField(help_text='Descrição da atividade do cargo/função comissionada exercida pelo servidor')),
                ('partial_option', models.TextField(help_text='Se servidor ocupante de cargo efetivo e de função comissionada, indica se optou pela remuneração do cargo efetivo, do posto ou graduação, ou do emprego, acrescida do percentual de 60% (sessenta por cento) do respectivo cargo em comissão')),
                ('organizational_unit_located_code', models.TextField(help_text='Código da unidade organizacional onde o servidor está lotado')),
                ('organizational_unit_located', models.TextField(help_text='Nome da unidade organizacional onde o servidor está lotado')),
                ('agency_located_code', models.TextField(help_text='Código do órgão onde o servidor está lotado')),
                ('agency_located', models.TextField(help_text='Nome do órgão onde o servidor está lotado')),
                ('higher_agency_located_code', models.TextField(help_text='Código do órgão superior onde o servidor está lotado')),
                ('higher_agency_located', models.TextField(help_text='Nome do órgão superior onde o servidor está lotado')),
                ('organizational_unit_office_code', models.TextField(help_text='Código da unidade organizacional onde o servidor está em exercício')),
                ('organizational_unit_office', models.TextField(help_text='Nome da unidade organizacional onde o servidor está em exercício')),
                ('agency_office_code', models.TextField(help_text='Código do órgão onde o servidor está em exercício')),
                ('agency_office', models.TextField(help_text='Nome do órgão onde o servidor está em exercício')),
                ('higher_agency_office_code', models.TextField(help_text='Código do órgão superior onde o servidor está em exercício')),
                ('higher_agency_office', models.TextField(help_text='Nome do órgão superior onde o servidor está em exercício')),
                ('timeoff_start_date', models.DateField(help_text='Data de início do afastamento do servidor, em caso de afastamento', null=True)),
                ('timeoff_end_date', models.DateField(help_text='Data de término do afastamento do servidor, em caso de afastamento', null=True)),
                ('legal_regime', models.TextField(help_text='Regime Jurídico do Servidor')),
                ('workload', models.TextField(help_text='Jornada semanal de trabalho do servidor')),
                ('position_admission_date', models.DateField(help_text='Data de ingresso do servidor no cargo ou função', null=True)),
                ('position_appointment_date', models.DateField(help_text='Data de nomeação do servidor no cargo ou função', null=True)),
                ('agency_admission_date', models.DateField(help_text='Data de ingresso do servidor no órgão', null=True)),
                ('admission_document', models.TextField(help_text='Documento de ingresso do servidor no serviço público')),
                ('admission_degree_date', models.DateField(help_text='Data do diploma de ingresso do servidor no serviço público', null=True)),
                ('position_admission_degree', models.TextField(help_text='Diploma de ingresso do servidor no cargo ou função')),
                ('agency_admission_degree', models.TextField(help_text='Diploma de ingresso do servidor no órgão')),
                ('public_service_admission_degree', models.TextField(help_text='Diploma de ingresso do servidor no serviço público')),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'Advocatício'), (2, 'JETONS')], help_text='Tipo do honorário')),
                ('reference_date', models.DateField(help_text='Data de referência')),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.CharField(help_text='Nome do servidor', max_length=512)),
                ('company', models.TextField(help_text='Nome da empresa em que o representante da União atua em Conselhos de Administração e Fiscal ou órgãos equivalentes - (Somente para JETONS)')),
                ('observation', models.TextField(help_text='Situação excepcional ocorrida no honorário do mês - (Somente para Advocaticios)')),
                ('value', models.BigIntegerField(help_text='Valor do honorário recebido pelo servidor')),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='InsertionTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'Employee'), (2, 'Retired'), (3, 'Pensioner'), (4, 'Fee'), (5, 'Remuneration'), (6, 'Observation'), (7, 'Timeoff')])),
                ('finished', models.BooleanField(default=False)),
                ('file', models.TextField()),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference_date', models.DateField(help_text='Data de referência')),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.CharField(help_text='Nome do servidor', max_length=512)),
                ('content', models.TextField(help_text='Situação excepcional ocorrida na remuneração do servidor no mês')),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pensioner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.TextField(help_text='Nome do servidor')),
                ('register', models.TextField(help_text='Matrícula do servidor')),
                ('relationship_code', models.IntegerField(help_text='Código do tipo de vínculo')),
                ('relationship', models.TextField(help_text='Tipo de vínculo')),
                ('relationship_status', models.TextField(help_text='Situação do vínculo detalhando o seu tipo')),
                ('legal_representative_cpf', models.TextField(help_text='CPF de eventual representante legal do pensionista')),
                ('legal_representative_name', models.TextField(help_text='Nome completo de eventual representante legal pensionista')),
                ('pension_type_code', models.TextField(help_text='Código do Tipo de Pensão')),
                ('pension_type', models.TextField(help_text='Descrição do Tipo de Pensão')),
                ('pension_start_date', models.DateField(help_text='Data de início da pensão', null=True)),
                ('pi_cpf', models.TextField(help_text='CPF do instituidor da pensão do pensionista')),
                ('pi_name', models.TextField(help_text='Nome completo do instituidor da pensão do pensionista')),
                ('pi_position', models.TextField(help_text='Descrição do cargo ocupado pelo instituidor da pensão quando em atividade')),
                ('pi_organizational_unit_located_code', models.TextField(help_text='Código da unidade organizacional onde o instituidor da pensão era lotado quando em atividade')),
                ('pi_organizational_unit_located', models.TextField(help_text='Nome da unidade organizacional onde o instituidor da pensão era lotado quando em atividade')),
                ('pi_agency_office_code', models.TextField(help_text='Código do órgão onde o instituidor da pensão era lotado quando em atividade')),
                ('pi_agency_office', models.TextField(help_text='Nome do órgão onde o instituidor da pensão era lotado quando em atividade')),
                ('pi_higher_agency_office_code', models.TextField(help_text='Código do órgão superior onde o instituidor da pensão era lotado quando em atividade')),
                ('pi_higher_agency_office', models.TextField(help_text='Nome do órgão superior onde o instituidor da pensão era lotado quando em atividade')),
                ('pi_legal_regime', models.TextField(help_text='Regime Jurídico do instituidor da pensão quando em atividade')),
                ('pi_workload', models.TextField(help_text='Jornada semanal de trabalho do instituidor da pensão quando em atividade')),
                ('pi_position_admission_date', models.DateField(help_text='Data de ingresso do instituidor da pensão no cargo ou função da atividade', null=True)),
                ('pi_position_appointment_date', models.DateField(help_text='Data de nomeação do instituidor da pensão no cargo ou função da atividade', null=True)),
                ('pi_agency_admission_date', models.DateField(help_text='Data de ingresso do instituidor da pensão no órgão', null=True)),
                ('pi_admission_document', models.TextField(help_text='Documento de ingresso do instituidor da pensão no serviço público')),
                ('pi_admission_degree_date', models.DateField(help_text='Data do diploma de ingresso do instituidor da pensão no serviço público', null=True)),
                ('pi_position_admission_degree', models.TextField(help_text='Diploma de ingresso do instituidor da pensão no cargo ou função da atividade')),
                ('pi_agency_admission_degree', models.TextField(help_text='Diploma de ingresso do instituidor da pensão no órgão')),
                ('pi_public_service_admission_degree', models.TextField(help_text='Diploma de ingresso do instituidor da pensão no serviço público')),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('valid', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('folder', models.TextField()),
                ('date', models.DateField(unique=True)),
                ('employee_uri', models.TextField()),
                ('retired_uri', models.TextField()),
                ('pensioner_uri', models.TextField()),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Remuneration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference_date', models.DateField(help_text='Data de referência')),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.CharField(help_text='Nome do servidor', max_length=512)),
                ('base_remuneration_real', models.BigIntegerField(help_text='Remuneração básica bruta (R$)')),
                ('base_remuneration_dollar', models.BigIntegerField(help_text='Remuneração básica bruta (U$)')),
                ('ceiling_drop_real', models.BigIntegerField(help_text='Abate-teto (R$)')),
                ('ceiling_drop_dollar', models.BigIntegerField(help_text='Abate-teto (U$)')),
                ('christmas_bonus_real', models.BigIntegerField(help_text='Gratificação natalina (R$)')),
                ('christmas_bonus_dollar', models.BigIntegerField(help_text='Gratificação natalina (U$)')),
                ('ceiling_drop_christmas_bonus_real', models.BigIntegerField(help_text='Abate-teto da gratificação natalina (R$)')),
                ('ceiling_drop_christmas_bonus_dollar', models.BigIntegerField(help_text='Abate-teto da gratificação natalina (U$)')),
                ('vacation_real', models.BigIntegerField(help_text='Férias (R$)')),
                ('vacation_dollar', models.BigIntegerField(help_text='Férias (U$)')),
                ('eventual_real', models.BigIntegerField(help_text='Outras remunerações eventuais (R$)')),
                ('eventual_dollar', models.BigIntegerField(help_text='Outras remunerações eventuais (U$)')),
                ('irrf_real', models.BigIntegerField(help_text='IRRF (R$)')),
                ('irrf_dollar', models.BigIntegerField(help_text='IRRF (U$)')),
                ('social_welfare_real', models.BigIntegerField(help_text='PSS/RPGS (R$)')),
                ('social_welfare_dollar', models.BigIntegerField(help_text='PSS/RPGS (U$)')),
                ('other_deductions_real', models.BigIntegerField(help_text='Demais deduções (R$)')),
                ('other_deductions_dollar', models.BigIntegerField(help_text='Demais deduções (U$)')),
                ('military_pension_real', models.BigIntegerField(help_text='Pensão militar (R$)')),
                ('military_pension_dollar', models.BigIntegerField(help_text='Pensão militar (U$)')),
                ('health_fund_real', models.BigIntegerField(help_text='Fundo de saúde (R$)')),
                ('health_fund_dollar', models.BigIntegerField(help_text='Fundo de saúde (U$)')),
                ('property_cost_real', models.BigIntegerField(help_text='Taxa de ocupação imóvel funcional (R$)')),
                ('property_cost_dollar', models.BigIntegerField(help_text='Taxa de ocupação imóvel funcional (U$)')),
                ('remuneration_real', models.BigIntegerField(help_text='Remuneração após deduções obrigatórias (R$)')),
                ('remuneration_dollar', models.BigIntegerField(help_text='Remuneração após deduções obrigatórias (U$)')),
                ('indemnity_amount_civil_real', models.BigIntegerField(help_text='Verbas indenizatórias registradas em sistemas de pessoal - civil (R$)')),
                ('indemnity_amount_civil_dollar', models.BigIntegerField(help_text='Verbas indenizatórias registradas em sistemas de pessoal - civil (U$)')),
                ('indemnity_amount_militar_real', models.BigIntegerField(help_text='Verbas indenizatórias registradas em sistemas de pessoal - militar (R$)')),
                ('indemnity_amount_militar_dollar', models.BigIntegerField(help_text='Verbas indenizatórias registradas em sistemas de pessoal - militar (U$)')),
                ('indemnity_amount_mp_real', models.BigIntegerField(help_text='Verbas indenizatórias programa desligamento voluntário - MP 792/2017 (R$)')),
                ('indemnity_amount_mp_dollar', models.BigIntegerField(help_text='Verbas indenizatórias programa desligamento voluntário - MP 792/2017 (U$)')),
                ('indemnity_total_amount_real', models.BigIntegerField(help_text='Total de verbas indenizatórias (R$)')),
                ('indemnity_total_amount_dollar', models.BigIntegerField(help_text='Total de verbas indenizatórias (U$)')),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Retired',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.TextField(help_text='Nome do servidor')),
                ('register', models.TextField(help_text='Matrícula do servidor')),
                ('relationship_code', models.IntegerField(help_text='Código do tipo de vínculo')),
                ('relationship', models.TextField(help_text='Tipo de vínculo')),
                ('relationship_status', models.TextField(help_text='Situação do vínculo do inativo indicando, para os Militares, se Reserva ou Reforma')),
                ('retirement_type_code', models.TextField(help_text='Código do Tipo de Aposentadoria')),
                ('retirement_type', models.TextField(help_text='Descrição do Tipo de Aposentadoria')),
                ('retirement_date', models.DateField(help_text='Data da aposentadoria (civis) ou de início da reserva/reforma (militares)', null=True)),
                ('position_description', models.TextField(help_text='Descrição do cargo ocupado do inativo quando em atividade')),
                ('organizational_unit_located_code', models.TextField(help_text='Código da unidade organizacional onde o inativo era lotado quando em atividade')),
                ('organizational_unit_located', models.TextField(help_text='Nome da unidade organizacional onde o inativo era lotado quando em atividade')),
                ('agency_located_code', models.TextField(help_text='Código do órgão onde o inativo era lotado quando em atividade')),
                ('agency_located', models.TextField(help_text='Nome do órgão onde o inativo era lotado quando em atividade')),
                ('higher_agency_located_code', models.TextField(help_text='Código do órgão superior onde o inativo era lotado quando em atividade')),
                ('higher_agency_located', models.TextField(help_text='Nome do órgão superior onde o inativo era lotado quando em atividade')),
                ('legal_regime', models.TextField(help_text='Regime Jurídico do inativo quando em atividade')),
                ('workload', models.TextField(help_text='Jornada semanal de trabalho do inativo quando em atividade')),
                ('position_admission_date', models.DateField(help_text='Data de ingresso do inativo no cargo ou função da atividade', null=True)),
                ('position_appointment_date', models.DateField(help_text='Data de nomeação do inativo no cargo ou função da atividade', null=True)),
                ('agency_admission_date', models.DateField(help_text='Data de ingresso do inativo no órgão', null=True)),
                ('admission_document', models.TextField(help_text='Documento de ingresso do inativo no serviço público')),
                ('admission_degree_date', models.DateField(help_text='Data do diploma de ingresso do inativo no serviço público', null=True)),
                ('position_admission_degree', models.TextField(help_text='Diploma de ingresso do inativo no cargo ou função da atividade')),
                ('agency_admission_degree', models.TextField(help_text='Diploma de ingresso do inativo no órgão')),
                ('public_service_admission_degree', models.TextField(help_text='Diploma de ingresso do inativo no serviço público')),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='TimeOff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference_date', models.DateField(help_text='Data de referência')),
                ('portal_id', models.BigIntegerField(help_text='Identificador do servidor no conjunto de arquivos')),
                ('cpf', models.CharField(help_text='CPF do servidor', max_length=11)),
                ('name', models.CharField(help_text='Nome do servidor', max_length=512)),
                ('start_date', models.DateField(help_text='Data de início do afastamento', null=True)),
                ('end_date', models.DateField(help_text='Data de fim do afastamento', null=True)),
            ],
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_05df20_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_913bec_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['reference_date'], name='cgu_servido_referen_8a1de1_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['portal_id'], name='cgu_servido_portal__0ad8d3_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_1cdc5e_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['name'], name='cgu_servido_name_9490bc_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['start_date'], name='cgu_servido_start_d_9fca3b_idx'),
        ),
        migrations.AddIndex(
            model_name='timeoff',
            index=models.Index(fields=['end_date'], name='cgu_servido_end_dat_0cc969_idx'),
        ),
        migrations.AddConstraint(
            model_name='timeoff',
            constraint=models.UniqueConstraint(fields=('reference_date', 'portal_id', 'start_date', 'end_date'), name='unique_cgu_servidores_time_off'),
        ),
        migrations.AddIndex(
            model_name='retired',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_2cd291_idx'),
        ),
        migrations.AddIndex(
            model_name='retired',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_b94c0a_idx'),
        ),
        migrations.AddIndex(
            model_name='retired',
            index=models.Index(fields=['portal_id'], name='cgu_servido_portal__4b2502_idx'),
        ),
        migrations.AddIndex(
            model_name='retired',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_9b799c_idx'),
        ),
        migrations.AddIndex(
            model_name='retired',
            index=models.Index(fields=['name'], name='cgu_servido_name_b37647_idx'),
        ),
        migrations.AddIndex(
            model_name='retired',
            index=models.Index(fields=['register'], name='cgu_servido_registe_38fb4f_idx'),
        ),
        migrations.AddConstraint(
            model_name='retired',
            constraint=models.UniqueConstraint(fields=('portal_id', 'relationship_code', 'relationship_status', 'retirement_type_code', 'retirement_date', 'organizational_unit_located_code', 'agency_located_code', 'higher_agency_located_code', 'legal_regime', 'workload', 'position_admission_date', 'position_appointment_date', 'agency_admission_date', 'admission_degree_date', 'public_service_admission_degree'), name='unique_cgu_servidores_retired'),
        ),
        migrations.AddIndex(
            model_name='remuneration',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_8baec0_idx'),
        ),
        migrations.AddIndex(
            model_name='remuneration',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_96dfbc_idx'),
        ),
        migrations.AddIndex(
            model_name='remuneration',
            index=models.Index(fields=['reference_date'], name='cgu_servido_referen_d0913e_idx'),
        ),
        migrations.AddIndex(
            model_name='remuneration',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_c50c82_idx'),
        ),
        migrations.AddIndex(
            model_name='remuneration',
            index=models.Index(fields=['name'], name='cgu_servido_name_477b06_idx'),
        ),
        migrations.AddConstraint(
            model_name='remuneration',
            constraint=models.UniqueConstraint(fields=('reference_date', 'portal_id'), name='unique_cgu_servidores_remuneration'),
        ),
        migrations.AddIndex(
            model_name='release',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_6a8897_idx'),
        ),
        migrations.AddIndex(
            model_name='release',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_8ef2f7_idx'),
        ),
        migrations.AddIndex(
            model_name='release',
            index=models.Index(fields=['finished'], name='cgu_servido_finishe_a31671_idx'),
        ),
        migrations.AddIndex(
            model_name='release',
            index=models.Index(fields=['valid'], name='cgu_servido_valid_5bc9b2_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_1bfb37_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_af27a0_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['portal_id'], name='cgu_servido_portal__cd6257_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_a9387e_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['name'], name='cgu_servido_name_922bdf_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['register'], name='cgu_servido_registe_560a4b_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['legal_representative_cpf'], name='cgu_servido_legal_r_c64e78_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['legal_representative_name'], name='cgu_servido_legal_r_adaafa_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['pi_cpf'], name='cgu_servido_pi_cpf_658296_idx'),
        ),
        migrations.AddIndex(
            model_name='pensioner',
            index=models.Index(fields=['pi_name'], name='cgu_servido_pi_name_792855_idx'),
        ),
        migrations.AddConstraint(
            model_name='pensioner',
            constraint=models.UniqueConstraint(fields=('portal_id', 'relationship_code', 'relationship_status', 'legal_representative_cpf', 'legal_representative_name', 'pension_type_code', 'pension_start_date', 'pi_cpf', 'pi_name', 'pi_organizational_unit_located_code', 'pi_agency_office_code', 'pi_higher_agency_office_code', 'pi_legal_regime', 'pi_workload', 'pi_position_admission_date', 'pi_position_appointment_date', 'pi_agency_admission_date', 'pi_admission_degree_date', 'pi_public_service_admission_degree'), name='unique_cgu_servidores_pensioner'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_00b27b_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_87130c_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['reference_date'], name='cgu_servido_referen_3d1ce5_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['portal_id'], name='cgu_servido_portal__0cf2e6_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_404d28_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['name'], name='cgu_servido_name_41281f_idx'),
        ),
        migrations.AddConstraint(
            model_name='observation',
            constraint=models.UniqueConstraint(fields=('reference_date', 'portal_id', 'content'), name='unique_cgu_servidores_observation'),
        ),
        migrations.AddField(
            model_name='insertiontask',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cgu_servidores.release'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_894b01_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_8926d2_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['type'], name='cgu_servido_type_14ff12_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['reference_date'], name='cgu_servido_referen_17c5b6_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['portal_id'], name='cgu_servido_portal__81fab3_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_311a45_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['name'], name='cgu_servido_name_1488c2_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['value'], name='cgu_servido_value_3bc5af_idx'),
        ),
        migrations.AddConstraint(
            model_name='fee',
            constraint=models.UniqueConstraint(fields=('type', 'reference_date', 'portal_id', 'cpf', 'name', 'company', 'observation', 'value'), name='unique_cgu_servidor_fee'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['created_at'], name='cgu_servido_created_c9554d_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['updated_at'], name='cgu_servido_updated_317502_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['portal_id'], name='cgu_servido_portal__d7bb0f_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['cpf'], name='cgu_servido_cpf_f6940e_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['name'], name='cgu_servido_name_a9a6ac_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['register'], name='cgu_servido_registe_7a497e_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['uf'], name='cgu_servido_uf_b60023_idx'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(fields=('portal_id', 'uf', 'relationship_code', 'relationship_status', 'position_tier', 'position_default', 'position_level', 'occupation_initials', 'activity_code', 'partial_option', 'organizational_unit_located_code', 'agency_located_code', 'higher_agency_located_code', 'organizational_unit_office_code', 'agency_office_code', 'higher_agency_office_code', 'timeoff_start_date', 'timeoff_end_date', 'legal_regime', 'workload', 'position_admission_date', 'position_appointment_date', 'agency_admission_date', 'admission_degree_date', 'public_service_admission_degree'), name='unique_cgu_servidores_employee'),
        ),
        migrations.AddIndex(
            model_name='insertiontask',
            index=models.Index(fields=['finished'], name='cgu_servido_finishe_6d6e06_idx'),
        ),
    ]
