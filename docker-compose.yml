version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_USER: aletheia
      POSTGRES_PASSWORD: aletheia
      POSTGRES_DB: aletheia
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:6-alpine
    container_name: redis
    volumes:
      - redis_data:/data
  django:
    build:
      context: .
      target: django
    container_name: django
    command: ["./manage.py", "runserver", "0.0.0.0:8000"]
    volumes: 
      - ./:/opt/app
      - static_files:/opt/app/static
    env_file: .env
    restart: unless-stopped
    ports:
      - 8000:8000
    depends_on: 
      - postgres
      - redis
  celery_worker:
    build:
      context: .
      target: celery-worker
    container_name: celery_worker
    volumes: 
      - ./:/opt/app
    env_file: .env
    command: ["celery", "-A", "aletheia", "worker", "-l", "INFO"]
    restart: unless-stopped
    depends_on: 
      - postgres
      - redis
  celery_beat:
    build:
      context: .
      target: celery-beat
    container_name: celery_beat
    command: ["celery", "-A", "aletheia", "beat", "-l", "INFO"]
    volumes: 
      - ./:/opt/app
    env_file: .env
    restart: unless-stopped
    depends_on: 
      - postgres
      - redis

volumes:
  postgres_data:
  redis_data:
  static_files:
